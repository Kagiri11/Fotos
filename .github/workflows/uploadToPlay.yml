name: Upload To Playstore

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: assemble-app
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v1

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build
        run: ./gradlew build

  generate-release-bundle:
    needs: [ build ]
    name: Generate a release bundle
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Tell gradle to generate a release bundle
        run: ./gradlew bundleRelease

      - name: Sign Release apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.BASE64_CERT }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload release artifact
        uses: actions/upload-artifact@v1
        with:
          name: Fotos
          path: app/build/outputs/bundle/release
#
##      - name: Bump version
##      uses: chkfung/android-version-actions@v1.1
##      with:
##      gradlePath: app/build.gradle.kts
##      versionCode: ${{github.run_number}}
##      versionName: 1.0.0

  upload-to-playstore:
    needs: [ generate-release-bundle ]
    name: Upload Fotos aab to playstore
    runs-on: ubuntu-latest
    steps:
    
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: Fotos

      - name: Create service_account.json
        run: echo '${{ secrets.PLAYSTORE_SERVICE_ACCOUNT }}' > service_account.json

      - name: Deploy to Production
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJson: service_account.json
          packageName: com.cmaina.fotos
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal

  create-release:
    needs: [ generate-release-bundle ]
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: Fotos


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Fotos/release.aab
          asset_name: Fotos.aab
          asset_content_type: application/zip

#  generate-github-release:
#    name: Generate release
