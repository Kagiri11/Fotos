[versions]
retrofit = "2.9.0"
room = "2.4.2"
material = "1.5.0"
core = "1.7.0"
appCompat = "1.4.1"
coroutines = "1.6.0"
koin = "3.2.0-beta-1"
sandwich = "1.2.4"
reflection = "1.6.21"
okHttpLoggingInterceptor = "4.10.0"
coil = "1.4.0"
paging = "3.1.1"
pagingCompose = "1.0.0-alpha14"
compose = "1.3.0-beta01"
constraintLayout = "1.0.0-rc02"
systemUIController = "0.24.10-beta"
composeNavigation = "2.5.0"
blurHash = "1.0.4"
placeholder = "0.24.13-rc"
permission = "0.26.0-alpha"
splashScreen = "1.0.0-rc01"
viewModel = "2.5.0-rc02"
lifeCycle = "2.3.1"
activity = "1.3.1"
preferenceDatastore = "1.0.0"
fresco = "2.6.0"
landscapist = "1.6.1"
playUpdate = "2.1.0"
pager = "0.26.1-alpha"
googleGradleSecrets = "0.4"
kotlinJVM = "1.5.30"
kotlinKover = "0.6.0"
kotlinAndroid = "1.7.10"
androidApp = "7.2.0"
androidLib = "7.2.0"

# Test versions
jUnit = "4.13.2"
jUnitAndroid = "1.1.3"
espressoAndroid = "3.4.0"
mockK = "1.11.0"
truth = "1.1.3"
mockwebserver = "4.10.0"

# Modules
app = ":app"
domain = ":domain"
network = ":data:network"
local = ":data:local"
repository = ":data:repository"
presentation = ":presentation"

# Configurations
applicationCompileSdk = "33"
applicationMinSdk = "21"
applicationTargetSdk = "32"
applicationVersionName = "0.1.17"
applicationVersionCode = "25"
applicationId = "com.cmaina.fotos"

[libraries]
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okHttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttpLoggingInterceptor" }
# Room
room = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomCoroutines = { module = "androidx.room:room-ktx", version.ref = "room" }

material = { module = "com.google.android.material:material", version.ref = "material" }
composeMaterial = { module = "androidx.compose.material:material", version.ref = "compose" }

core = { module = "androidx.core:core-ktx", version.ref = "core" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
# Koin
koinCore = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koinAndroid = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koinCompose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

sandwich = { module = "com.github.skydoves:sandwich", version.ref = "sandwich" }
reflection = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "reflection" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Paging
paging = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
pagingCompose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }

systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "systemUIController" }
placeholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "placeholder" }
permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "permission" }
composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
blurHash = { module = "xyz.belvi.blurHash:blurHash", version.ref = "blurHash" }
composeUi = { module = "androidx.compose.ui:ui", version.ref = "compose" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintLayout" }
preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }

splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
liveData = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "viewModel" }
lifeCycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifeCycle" }
activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
preferenceDataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "preferenceDatastore" }
fresco = { module = "com.facebook.fresco:fresco", version.ref = "fresco" }
landscapist = { module = "com.github.skydoves:landscapist-fresco", version.ref = "landscapist" }

# Play Update
playUpdate = { module = "com.google.android.play:app-update", version.ref = "playUpdate" }
playUpdateKtx = { module = "com.google.android.play:app-update-ktx", version.ref = "playUpdate" }

# Pager
pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "pager" }

composeUtil = { module = "androidx.compose.ui:ui-util", version.ref = "compose" }
composeRuntime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }

#region Test libs
roomTesting = { module ="androidx.room:room-testing", version.ref ="room"}
junit = { module ="junit:junit", version.ref ="jUnit"}
jUnitAndroid = { module ="androidx.test.ext:junit", version.ref ="jUnitAndroid"}
androidEspresso = { module ="androidx.test.espresso:espresso-core", version.ref ="espressoAndroid"}
mockK = { module ="io.mockk:mockk", version.ref ="mockK"}
truth = { module ="com.google.truth:truth", version.ref ="truth"}
jUnitComposeTest = { module ="androidx.compose.ui:ui-test-junit4", version.ref ="compose"}
composeUiTestManifest = { module ="androidx.compose.ui:ui-test-manifest", version.ref ="compose"}
mockWebServer = { module ="com.squareup.okhttp3:mockwebserver", version.ref ="mockwebserver"}

#endregion

[plugins]
googleSecrets = { id = "com.google.secrets_gradle_plugin", version.ref = "googleGradleSecrets" }
androidApp = { id = "com.android.application", version.ref = "androidApp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinAndroid" }
androidLib = { id = "com.android.library", version.ref = "androidLib" }
kotlinJVM = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinJVM" }
kotlinKover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlinKover" }
